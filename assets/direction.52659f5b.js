var p=(T=>(T[T.SCREEN_CENTER=0]="SCREEN_CENTER",T[T.TOP_START=1]="TOP_START",T[T.TOP_CENTER=2]="TOP_CENTER",T[T.TOP_END=3]="TOP_END",T[T.RIGHT_START=4]="RIGHT_START",T[T.RIGHT_CENTER=5]="RIGHT_CENTER",T[T.RIGHT_END=6]="RIGHT_END",T[T.BOTTOM_END=7]="BOTTOM_END",T[T.BOTTOM_CENTER=8]="BOTTOM_CENTER",T[T.BOTTOM_START=9]="BOTTOM_START",T[T.LEFT_END=10]="LEFT_END",T[T.LEFT_CENTER=11]="LEFT_CENTER",T[T.LEFT_START=12]="LEFT_START",T))(p||{});const o=[];for(const T in p)if(isNaN(T)){const d=T.split("_").map(C=>{const t=C.toLocaleLowerCase();return t.charAt(0).toUpperCase()+t.substring(1)});o.push({label:d.join(" "),value:p[T]})}function E(T,d,C=8){const{width:t,height:s,top:_,left:R}=T?T.getBoundingClientRect():{width:0,height:0,top:window.innerHeight/2,left:window.innerWidth/2},{width:O,height:h,offset:N=10}=d,w={[0]:[window.innerWidth/2-O/2,window.innerHeight/2-h/2],[1]:[R,_-h-N],[2]:[R+t/2-O/2,_-h-N],[3]:[R+t-O,_-h-N],[4]:[R+t+N,_],[5]:[R+t+N,_+s/2-h/2],[6]:[R+t+N,_+s-h],[7]:[R+t-O,_+s+N],[8]:[R+t/2-O/2,_+s+N],[9]:[R,_+s+N],[10]:[R-O-N,_+s-h],[11]:[R-O-N,_+s/2-h/2],[12]:[R-O-N,_]},a=[R+t/2,_+s/2];return[...w[C],...a]}export{o as d,E as g};
